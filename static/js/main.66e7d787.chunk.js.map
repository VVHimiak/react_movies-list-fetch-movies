{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","FindMovie","props","onFindMovie","setMovies","useState","value","setTitleInputValue","findedMovie","setFindMovie","isValidTitleField","setValidTitleField","onSubmit","event","preventDefault","find","htmlFor","type","id","placeholder","classNames","onChange","target","onClick","then","moviesFromServer","Response","Title","Plot","Poster","imdbID","disabled","getMovie","fetch","response","json","App","state","data","setState","currentState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66e7d787.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n// import movies from '../../api/movies.json';\n\ntype Props = {\n  onFindMovie: (value: string) => Promise<FromServer>;\n  setMovies: (movie: Movie) => void;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const {\n    onFindMovie,\n    setMovies,\n    movies,\n  } = props;\n\n  const [value, setTitleInputValue] = useState('');\n  const [findedMovie, setFindMovie] = useState<Movie | null>(null);\n  const [isValidTitleField, setValidTitleField] = useState(true);\n\n  const handleEvent = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValidTitleField(true);\n\n    return (\n      setTitleInputValue(event.target.value)\n    );\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const movieExistInList = movies.find(movie => {\n      if (findedMovie) {\n        return movie.imdbId === findedMovie.imdbId;\n      }\n\n      return setValidTitleField(false);\n    });\n\n    if (!movieExistInList && findedMovie) {\n      setMovies(findedMovie);\n    }\n  };\n\n  const handleFindMovie = () => {\n    return onFindMovie(value)\n      .then(moviesFromServer => {\n        return setFindMovie(() => {\n          if (moviesFromServer.Response === 'True') {\n            setValidTitleField(true);\n            setTitleInputValue('');\n\n            return ({\n              title: moviesFromServer.Title,\n              description: moviesFromServer.Plot,\n              imgUrl: moviesFromServer.Poster,\n              imdbUrl: `https://www.imdb.com/title/${moviesFromServer.imdbID}`,\n              imdbId: moviesFromServer.imdbID,\n            });\n          }\n\n          setValidTitleField(false);\n          setTitleInputValue('');\n\n          return null;\n        });\n      });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={\n                classNames(\n                  'input',\n                  {\n                    'is-danger': !isValidTitleField,\n                  },\n                )\n              }\n              value={value}\n              onChange={handleEvent}\n            />\n          </div>\n          {\n            !isValidTitleField\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-link\"\n              disabled={!findedMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {findedMovie !== null && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...findedMovie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","export function getMovie(value:string): Promise<FromServer> {\n  return fetch(`https://www.omdbapi.com/?apikey=c53d0153&t=${value}`)\n    .then(response => response.json());\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { getMovie } from './api/api';\nimport data from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: data,\n  };\n\n  setMovies = (movie: Movie) => {\n    this.setState((currentState) => {\n      return ({\n        movies: [...currentState.movies, movie],\n      });\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie onFindMovie={getMovie} setMovies={this.setMovies} movies={movies} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}